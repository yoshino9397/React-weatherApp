[{"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/index.js":"1","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/App.js":"2","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/Weather.js":"3","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/Wrapper.js":"4","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/utils/fetchHelpers.js":"5","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/WeatherDisplay.js":"6","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/Geolocation.js":"7","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/SearchBox.js":"8"},{"size":168,"mtime":1648013075150,"results":"9","hashOfConfig":"10"},{"size":183,"mtime":1648010984749,"results":"11","hashOfConfig":"10"},{"size":2749,"mtime":1648017718976,"results":"12","hashOfConfig":"10"},{"size":771,"mtime":1648017277578,"results":"13","hashOfConfig":"10"},{"size":1893,"mtime":1648020307872,"results":"14","hashOfConfig":"10"},{"size":964,"mtime":1648020318921,"results":"15","hashOfConfig":"10"},{"size":515,"mtime":1648017824322,"results":"16","hashOfConfig":"10"},{"size":1031,"mtime":1648017896326,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"c52gvk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/index.js",[],["36","37"],"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/App.js",[],"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/Weather.js",["38"],"import React, { useState, useEffect } from \"react\";\nimport Wrapper from \"./Wrapper\";\nimport { getWeather } from \"../utils/fetchHelpers\";\nimport styled from 'styled-components';\nimport blue from '../assets/blue.jpg';\nimport green from '../assets/green.jpg';\nimport orange from '../assets/orange.jpg';\n\nconst StyledWeather = styled.div`\n  background-image: url(\n    ${props => {\n    if (props.bgImage === 'blue') {\n      return blue;\n    }\n    if (props.bgImage === 'green') {\n      return green;\n    }\n    if (props.bgImage === 'orange') {\n      return orange;\n    }\n  }}\n  );\n  background-size: cover;\n  background-position: top center;\n`\n\nconst Weather = () => {\n  const [inputLocation, setInputLocation] = useState(\"Canada\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n  const [location, setLocation] = useState({\n    city: \"\",\n    state: \"\",\n    country: \"\",\n  });\n  const [weather, setWeather] = useState({\n    currentTemp: 0,\n    weatherMain: \"\",\n    tempMax: 0,\n    tempMin: 0,\n  });\n\n  useEffect(() => {\n    fetchData(\"Vancouver\").then(([newWeather, placeName]) => {\n      setWeather(newWeather);\n      setLocation(placeName);\n    });\n  }, []);\n\n  async function fetchData(newLocation) {\n    const now = new Date();\n    setCurrentDate(dateBuilder(now));\n    const response = await getWeather(newLocation);\n    return response;\n  }\n\n  const setBackground = () => {\n    const now = new Date();\n    const hour = now.getHours();\n    if (hour <= 7 || hour > 18) {\n      return \"blue\";\n    }\n    if (hour > 7 && hour <= 15) {\n      return \"green\";\n    }\n    return \"orange\";\n  };\n\n  const dateBuilder = (d) => {\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    const days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    const day = days[d.getDay()];\n    const date = d.getDate();\n    const month = months[d.getMonth()];\n    const year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const handleInputLocation = (e) => {\n    e.preventDefault();\n    setInputLocation(e.target.value);\n  };\n\n  const getForecast = (e) => {\n    e.preventDefault();\n    fetchData(inputLocation).then(([newWeather, placeName]) => {\n      setWeather(newWeather);\n      setLocation(placeName);\n    });\n  };\n\n  return (\n    <StyledWeather bgImage={setBackground()}>\n      <Wrapper\n        states={{ location, currentDate, weather }}\n        handleInput={handleInputLocation}\n        handleSubmit={getForecast}\n      />\n    </StyledWeather>\n  );\n};\n\nexport default Weather;\n","/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/Wrapper.js",[],"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/utils/fetchHelpers.js",[],"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/WeatherDisplay.js",[],"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/Geolocation.js",[],"/Users/yayamayoshino/Desktop/codefiles/React-weatherApp/src/components/SearchBox.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":47,"column":6,"nodeType":"45","endLine":47,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [fetchData]",{"range":"52","text":"53"},[1158,1160],"[fetchData]"]